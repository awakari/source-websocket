apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "source-websocket.fullname" . }}
  labels:
    {{- include "source-websocket.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "source-websocket.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "source-websocket.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "source-websocket.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      priorityClassName: "{{ .Values.priority.class }}"
      containers:
        - name: {{ .Chart.Name }}
          env:
            - name: API_PORT
              value: "{{ .Values.service.port }}"
            - name: API_WRITER_BACKOFF
              value: "{{ .Values.api.writer.backoff }}"
            - name: API_WRITER_URI
              value: "{{ .Values.api.writer.uri }}"
            - name: DB_NAME
              value: {{ .Values.db.name }}
            - name: DB_URI
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.db.secret.name }}"
                  key: "{{ .Values.db.secret.keys.url }}"
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.db.secret.name }}"
                  key: "{{ .Values.db.secret.keys.username }}"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.db.secret.name }}"
                  key: "{{ .Values.db.secret.keys.password }}"
            - name: DB_TABLE_NAME
              value: {{ .Values.db.table.name }}
            - name: DB_TABLE_SHARD
              value: "{{ .Values.db.table.shard }}"
            - name: DB_TLS_ENABLED
              value: "{{ .Values.db.tls.enabled }}"
            - name: DB_TLS_INSECURE
              value: "{{ .Values.db.tls.insecure }}"
            - name: DB_TABLE_RETENTION
              value: "{{ .Values.db.table.retention }}"
            - name: API_EVENTS_TYPE
              value: "{{ .Values.api.events.type }}"
            - name: LOG_LEVEL
              value: "{{ .Values.log.level }}"
            - name: API_USER_AGENT
              value: "{{ .Values.api.userAgent }}"
            - name: API_GROUP_ID
              value: "{{ .Values.api.groupId }}"
            - name: API_EVENTS_SOURCE
              value: "{{ .Values.api.events.source }}"
            - name: REPLICA_COUNT
              value: "{{ .Values.replicaCount }}"
            - name: REPLICA_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: API_TOKEN_INTERNAL
              valueFrom:
                secretKeyRef:
                  key: "{{ .Values.api.token.internal.key }}"
                  name: "{{ .Values.api.token.internal.name }}"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: grpc
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            grpc:
              port: {{ .Values.service.port }}
            timeoutSeconds: 10
          readinessProbe:
            grpc:
              port: {{ .Values.service.port }}
            timeoutSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: {{ include "source-websocket.name" . }}

# Default values for source-websocket.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/awakari/source-websocket
  pullPolicy: Always
  tag: "latest"
imagePullSecrets:
  - name: github-registry
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 50051

ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
  hosts:
    - host: source-websocket.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    cpu: 1m
    memory: 16Mi
  limits:
    cpu: 100m
    memory: 64Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationValue: 100m
  targetMemoryUtilizationValue: 64Mi
  resolver:
    name: "resolver"
    queue:
      name: "resolver"
      capacity:
        threshold: "10000"
        target: "7000" # means downscale when queue length > 3000 (10000 - 7000)

priority:
  class: "awk-major"

nodeSelector: {}

tolerations: []

api:
  writer:
    backoff: "10s"
    timeout: "10s"
    uri: "http://pub:8080/v1"
  token:
    internal:
      key: "api-token-internal"
      name: "auth"
  userAgent: "Awakari"
  groupId: "default"
  events:
    source: "https://awakari.com/pub.html?srcType=ws"
    type: "com_awakari_websocket_v1"
db:
  # Database name to use.
  name: source
  secret:
    name: "db-mongo-external-0"
    keys:
      url: "url"
      username: "username"
      password: "password"
  table:
    # Database table name to use.
    name: websocket
    retention: "2160h" # 90 days
    shard: false
  tls:
    enabled: false
    insecure: false
log:
  # https://pkg.go.dev/golang.org/x/exp/slog#Level
  level: -4
